--- gcc-9.3.0-orig/libgomp/config/posix/bar.c	2021-01-05 05:03:40.731837584 +0000
+++ gcc-9.3.0/libgomp/config/posix/bar.c	2021-01-05 05:07:19.849772208 +0000
@@ -29,6 +29,7 @@
    POSIX pthread_barrier_t won't work.  */
 
 #include "libgomp.h"
+#include "tern/user.h"
 
 
 void
@@ -44,6 +45,7 @@
   bar->arrived = 0;
   bar->generation = 0;
   bar->cancellable = false;
+  soba_init((long)bar, count, 20*omp_get_max_threads());
 }
 
 void
@@ -59,6 +61,7 @@
 #endif
   gomp_sem_destroy (&bar->sem1);
   gomp_sem_destroy (&bar->sem2);
+  soba_destroy((long)bar);
 }
 
 void
@@ -99,8 +102,11 @@
       gomp_mutex_unlock (&bar->mutex2);
 #endif
 
-      if (n == 0)
-	gomp_sem_post (&bar->sem2);
+      if (n == 0){
+	      gomp_sem_post (&bar->sem2);
+      } else {
+        tern_dummy_sync();
+      }
     }
 }
 
@@ -108,6 +114,7 @@
 gomp_barrier_wait (gomp_barrier_t *barrier)
 {
   gomp_barrier_wait_end (barrier, gomp_barrier_wait_start (barrier));
+  soba_wait((long)barrier);
 }
 
 void
@@ -166,8 +173,11 @@
       gomp_mutex_unlock (&bar->mutex2);
 #endif
 
-      if (n == 0)
-	gomp_sem_post (&bar->sem2);
+      if (n == 0){
+	      gomp_sem_post (&bar->sem2);
+      } else {
+        tern_dummy_sync();
+      }
     }
 }
 
@@ -238,8 +248,11 @@
       gomp_mutex_unlock (&bar->mutex2);
 #endif
 
-      if (n == 0)
-	gomp_sem_post (&bar->sem2);
+      if (n == 0){
+	      gomp_sem_post (&bar->sem2);
+      } else {
+        tern_dummy_sync();
+      }
       if (gen & BAR_CANCELLED)
 	return true;
     }
@@ -250,6 +263,7 @@
 gomp_team_barrier_wait (gomp_barrier_t *barrier)
 {
   gomp_team_barrier_wait_end (barrier, gomp_barrier_wait_start (barrier));
+  soba_wait((long)barrier);
 }
 
 void
