diff -ruN parsec-3.0-orig/pkgs/apps/facesim/src/TaskQ/lib/Makefile parsec-2.0/pkgs/apps/facesim/src/TaskQ/lib/Makefile
--- parsec-3.0-orig/pkgs/apps/facesim/src/TaskQ/lib/Makefile	2013-02-07 14:42:54.896848798 -0500
+++ parsec-3.0/pkgs/apps/facesim/src/TaskQ/lib/Makefile	2013-02-07 14:44:02.212846387 -0500
@@ -1,5 +1,5 @@
 all: taskQ.o
 
 taskQ.o: 
-	$(CXX) $(CXXFLAGS) -DTASKQ_DIST_FIXED -c taskQDistCommon.c
+	$(CXX) -I$(XTERN_ROOT)/include -L$(XTERN_ROOT)/dync_hook -Wl,--rpath,$(XTERN_ROOT)/dync_hook -lxtern-annot $(CXXFLAGS) -DTASKQ_DIST_FIXED -c taskQDistCommon.c
 	mv taskQDistCommon.o taskQ.o
--- parsec-3.0-orig/pkgs/apps/facesim/src/TaskQ/lib/taskQDistCommon.c	2007-10-01 15:01:16.000000000 -0400
+++ parsec-3.0/pkgs/apps/facesim/src/TaskQ/lib/taskQDistCommon.c	2018-07-31 02:13:02.031401805 -0400
@@ -118,12 +118,15 @@
     return done;
 }
 
+
+#include "tern/user.h"
 static int doOwnTasks( long myThreadId, long myQ) {
     void *task[NUM_FIELDS];
     int executed = 0;
 
     TRACE;
     while ( getATaskFromHead( &taskQs[myQ], task)) {
+          soba_wait(0);
         ( ( TaskQTask3)task[0])( myThreadId, task[1], task[2], task[3]);
         executed = 1;
     }
@@ -234,6 +237,8 @@
 #endif //ENABLE_PTHREADS
     sync.threadCount = 0;
 
 #ifdef ENABLE_PTHREADS
+    soba_init(0, numThreads, 100);
+    slock_next_n(numThreads-1);
     for ( i = 1; i < numThreads; i++)
     {
--- parsec-3.0-orig/pkgs/apps/facesim/src/Public_Library/Thread_Utilities/THREAD_POOL.cpp	2007-10-08 15:24:41.000000000 -0400
+++ parsec-3.0/pkgs/apps/facesim/src/Public_Library/Thread_Utilities/THREAD_POOL.cpp	2018-07-31 02:12:36.058873677 -0400
@@ -96,9 +96,10 @@
    	data->working_threads = number_of_threads;
	data->waiting_threads = 0;
	std::cout << "THREAD_POOL: Inititalizing Threads: ";
 
+    slock_next_n(number_of_threads-1);
	for (int t = 1; t <= number_of_threads; t++)
	{
		std::cout << t << " ";
#ifdef ENABLE_PTHREADS
		pthread_create (&data->threads (t), 0, Worker, this);
